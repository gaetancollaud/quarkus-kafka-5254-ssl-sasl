quarkus.ssl.native=true
quarkus.native.enable-all-security-services=true

mp.messaging.outgoing.match-result.bootstrap.servers=${node}:9092
mp.messaging.outgoing.match-result.ssl.endpoint.identification.algorithm=https
mp.messaging.outgoing.match-result.sasl.mechanism=PLAIN
mp.messaging.outgoing.match-result.request.timeout.ms=20000
mp.messaging.outgoing.match-result.retry.backoff.ms=500
mp.messaging.outgoing.match-result.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${username}" password="${password}";
mp.messaging.outgoing.match-result.security.protocol=SASL_SSL
mp.messaging.outgoing.match-result.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.match-result.topic=anamarija
mp.messaging.outgoing.match-result.connector=smallrye-kafka


#%dev.mp.messaging.outgoing.generated-price.connector=smallrye-kafka
##%dev.mp.messaging.outgoing.generated-price.bootstrap.servers=127.0.0.1:9092
#%dev.mp.messaging.outgoing.generated-price.ssl.truststore.location=/usr/local/etc/kafka/certs/docker.kafka.server.keystore.jks
#%dev.mp.messaging.outgoing.generated-price.ssl.truststore.password=kafkadocker
#%dev.mp.messaging.outgoing.generated-price.ssl.endpoint.identification.algorithm=https
#%dev.mp.messaging.outgoing.generated-price.sasl.mechanism=PLAIN
#%dev.mp.messaging.outgoing.generated-price.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";
#%dev.mp.messaging.outgoing.generated-price.security.protocol=SASL_SSL
#%dev.mp.messaging.outgoing.generated-price.topic=prices
#%dev.mp.messaging.outgoing.generated-price.value.serializer=org.apache.kafka.common.serialization.IntegerSerializer
#
## Configure the Kafka source (we read from it)
#%dev.mp.messaging.incoming.prices.connector=smallrye-kafka
##%dev.mp.messaging.incoming.prices.bootstrap.servers=127.0.0.1:9092
#%dev.mp.messaging.incoming.prices.ssl.truststore.location=/usr/local/etc/kafka/certs/docker.kafka.server.keystore.jks
#%dev.mp.messaging.incoming.prices.ssl.truststore.password=kafkadocker
#%dev.mp.messaging.incoming.prices.ssl.endpoint.identification.algorithm=https
#%dev.mp.messaging.incoming.prices.sasl.mechanism=PLAIN
#%dev.mp.messaging.incoming.prices.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";
#%dev.mp.messaging.incoming.prices.security.protocol=SASL_SSL
#%dev.mp.messaging.incoming.prices.topic=prices
#%dev.mp.messaging.incoming.prices.value.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
#
#
#mp.messaging.outgoing.generated-price.connector=smallrye-kafka
##mp.messaging.outgoing.generated-price.bootstrap.servers=127.0.0.1:9092
#mp.messaging.outgoing.generated-price.ssl.truststore.location=/usr/local/etc/kafka/certs/docker.kafka.server.truststore.jks
#mp.messaging.outgoing.generated-price.ssl.truststore.password=kafkadocker
#mp.messaging.outgoing.generated-price.ssl.endpoint.identification.algorithm=https
#mp.messaging.outgoing.generated-price.sasl.mechanism=PLAIN
#mp.messaging.outgoing.generated-price.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";
#mp.messaging.outgoing.generated-price.security.protocol=SASL_SSL
#mp.messaging.outgoing.generated-price.topic=prices
#mp.messaging.outgoing.generated-price.value.serializer=org.apache.kafka.common.serialization.IntegerSerializer
##
### Configure the Kafka source (we read from it)
#mp.messaging.incoming.prices.connector=smallrye-kafka
##mp.messaging.incoming.prices.bootstrap.servers=127.0.0.1:9092
#mp.messaging.incoming.prices.ssl.truststore.location=/usr/local/etc/kafka/certs/docker.kafka.server.truststore.jks
#mp.messaging.incoming.prices.ssl.truststore.password=kafkadocker
#mp.messaging.incoming.prices.ssl.endpoint.identification.algorithm=https
#mp.messaging.incoming.prices.sasl.mechanism=PLAIN
#mp.messaging.incoming.prices.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";
#mp.messaging.incoming.prices.security.protocol=SASL_SSL
#mp.messaging.incoming.prices.topic=prices
#mp.messaging.incoming.prices.value.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
