version: '2'

services:

  zookeeper:
    image: strimzi/kafka:latest-kafka-2.3.0
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs

  kafka:
    image: strimzi/kafka:latest-kafka-2.3.0
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override create.topics=$${KAFKA_CREATE_TOPICS} --override ssl.client.auth=$${KAFKA_SSL_CLIENT_AUTH} --override ssl.truststore.password=$${KAFKA_SSL_TRUSTSTORE_PASSWORD} --override ssl.truststore.location=$${KAFKA_SSL_TRUSTSTORE_LOCATION} --override ssl.key.password=$${KAFKA_SSL_KEY_PASSWORD} --override ssl.keystore.password=$${KAFKA_SSL_KEYSTORE_PASSWORD} --override ssl.keystore.location=$${KAFKA_SSL_KEYSTORE_LOCATION} --override sasl.mechanism.inter.broker.protocol=$${KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL} --override sasl.enabled.mechanisms=$${KAFKA_SASL_ENABLED_MECHANISMS} --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_LISTENERS: "PLAINTEXT://localhost:9093,SASL_SSL://localhost:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9093,SASL_SSL://localhost:9092"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SSL_CLIENT_AUTH: none
      KAFKA_SSL_KEYSTORE_LOCATION: '/certs/docker.kafka.server.keystore.jks'
      KAFKA_SSL_KEYSTORE_PASSWORD: 'kafkadocker'
      KAFKA_SSL_KEY_PASSWORD: 'kafkadocker'
      KAFKA_SSL_TRUSTSTORE_LOCATION: '/certs/docker.kafka.server.truststore.jks'
      KAFKA_SSL_TRUSTSTORE_PASSWORD: 'kafkadocker'
      KAFKA_CREATE_TOPICS: "prices:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./kafka_jaas.conf:/etc/kafka/kafka_server_jaas.conf
      - ./certs:/certs
    links:
      - zookeeper